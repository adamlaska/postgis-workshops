# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2023, Paul Ramsey | Mark Leslie | PostGIS contributors
# This file is distributed under the same license as the Introduction to PostGIS package.
# Daniel Nylander <daniel@danielnylander.se>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 21:46-0500\n"
"PO-Revision-Date: 2025-06-04 17:47+0000\n"
"Last-Translator: Daniel Nylander <daniel@danielnylander.se>\n"
"Language-Team: Swedish <https://weblate.osgeo.org/projects/postgis-workshop/"
"geography/sv/>\n"
"Language: sv\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.4.3\n"

#: ../../en/geography.rst:4
msgid "Geography"
msgstr "Geografi"

#: ../../en/geography.rst:6
msgid "It is very common to have data in which the coordinate are \"geographics\" or \"latitude/longitude\"."
msgstr ""
"Det är mycket vanligt med data där koordinaterna är \"geographics\" eller "
"\"latitude/longitude\"."

#: ../../en/geography.rst:8
msgid "Unlike coordinates in Mercator, UTM, or Stateplane, geographic coordinates are **not Cartesian coordinates**. Geographic coordinates do not represent a linear distance from an origin as plotted on a plane.  Rather, these **spherical coordinates** describe angular coordinates on a globe. In spherical coordinates a point is specified by the angle of rotation from a reference meridian (longitude), and the angle from the equator (latitude)."
msgstr ""
"Till skillnad från koordinater i Mercator, UTM eller Stateplane är "
"geografiska koordinater **inte kartesiska koordinater**. Geografiska "
"koordinater representerar inte ett linjärt avstånd från ett ursprung som "
"plottas på ett plan.  Snarare beskriver dessa **sfäriska koordinater** "
"vinkelkoordinater på en jordglob. I sfäriska koordinater specificeras en "
"punkt av rotationsvinkeln från en referensmeridian (longitud) och vinkeln "
"från ekvatorn (latitud)."

#: ../../en/geography.rst:13
msgid "You can treat geographic coordinates as approximate Cartesian coordinates and continue to do spatial calculations. However, measurements of distance, length and area will be **nonsensical**. Since spherical coordinates measure **angular** distance, the units are in \"degrees.\" Further, the approximate results from indexes and true/false tests like intersects and contains can become terribly wrong. The distance between points get larger as problem areas like the poles or the international dateline are approached."
msgstr ""
"Du kan behandla geografiska koordinater som ungefärliga kartesiska "
"koordinater och fortsätta att göra spatiala beräkningar. Mätningar av "
"avstånd, längd och area kommer dock att vara **nonsensiska**. Eftersom "
"sfäriska koordinater mäter **vinkel** avstånd, är enheterna i \"grader\" "
"Dessutom kan de ungefärliga resultaten från index och sant/falskt-test som "
"skär och innehåller bli väldigt fel. Avståndet mellan punkterna blir större "
"när man närmar sig problemområden som polerna eller den internationella "
"datalinjen."

#: ../../en/geography.rst:15
msgid "For example, here are the coordinates of Los Angeles and Paris."
msgstr "Här är till exempel koordinaterna för Los Angeles och Paris."

#: ../../en/geography.rst:17
msgid "Los Angeles: ``POINT(-118.4079 33.9434)``"
msgstr "Los Angeles: ``POINT(-118.4079 33.9434)```"

#: ../../en/geography.rst:18
msgid "Paris: ``POINT(2.3490 48.8533)``"
msgstr "Paris: ``POINT(2.3490 48.8533)``"

#: ../../en/geography.rst:20
msgid "The following calculates the distance between Los Angeles and Paris using the standard PostGIS Cartesian :command:`ST_Distance(geometry, geometry)`.  Note that the SRID of 4326 declares a geographic spatial reference system."
msgstr ""
"Följande beräknar avståndet mellan Los Angeles och Paris med hjälp av "
"PostGIS kartesiska standardkommando: `ST_Distance(geometry, geometry)`.  "
"Observera att SRID:en 4326 deklarerar ett geografiskt spatialt "
"referenssystem."

#: ../../en/geography.rst:33
msgid "Aha! 122! But, what does that mean?"
msgstr "Aha! 122! Men, vad betyder det?"

#: ../../en/geography.rst:35
msgid "The units for spatial reference 4326 are degrees. So our answer is 122 degrees. But (again), what does that mean?"
msgstr ""
"Enheterna för spatial referens 4326 är grader. Så vårt svar är 122 grader. "
"Men (återigen), vad betyder det?"

#: ../../en/geography.rst:37
msgid "On a sphere, the size of one \"degree square\" is quite variable, becoming smaller as you move away from the equator. Think of the meridians (vertical lines) on the globe getting closer to each other as you go towards the poles. So, a distance of 122 degrees doesn't *mean* anything. It is a nonsense number."
msgstr ""
"På en sfär är storleken på en \"gradkvadrat\" ganska varierande och blir "
"mindre ju längre bort från ekvatorn man kommer. Tänk på att meridianerna (de "
"vertikala linjerna) på jordklotet kommer närmare varandra när du rör dig mot "
"polerna. Så ett avstånd på 122 grader *betyder* ingenting. Det är ett "
"nonsensnummer."

#: ../../en/geography.rst:39
msgid "In order to calculate a meaningful distance, we must treat geographic coordinates not as approximate Cartesian coordinates but rather as true spherical coordinates.  We must measure the distances between points as true paths over a sphere -- a portion of a great circle."
msgstr ""
"För att kunna beräkna ett meningsfullt avstånd måste vi behandla geografiska "
"koordinater inte som ungefärliga kartesiska koordinater utan snarare som "
"verkliga sfäriska koordinater.  Vi måste mäta avstånden mellan punkterna som "
"verkliga banor över en sfär - en del av en storcirkel."

#: ../../en/geography.rst:41
msgid "PostGIS provides this functionality through the ``geography`` type."
msgstr "PostGIS tillhandahåller denna funktionalitet genom typen ``geografi``."

#: ../../en/geography.rst:45
msgid "Different spatial databases have different approaches for \"handling geographics\""
msgstr "Olika spatiala databaser har olika metoder för att \"hantera geografi\""

#: ../../en/geography.rst:47
msgid "Oracle attempts to paper over the differences by transparently doing geographic calculations when the SRID is geographic."
msgstr ""
"Oracle försöker dölja skillnaderna genom att på ett transparent sätt göra "
"geografiska beräkningar när SRID:en är geografisk."

#: ../../en/geography.rst:48
msgid "SQL Server uses two spatial types, \"STGeometry\" for Cartesian data and \"STGeography\" for geographics."
msgstr ""
"SQL Server använder två spatiala typer, \"STGeometry\" för kartesiska data "
"och \"STGeography\" för geografiska data."

#: ../../en/geography.rst:49
msgid "Informix Spatial is a pure Cartesian extension to Informix, while Informix Geodetic is a pure geographic extension."
msgstr ""
"Informix Spatial är ett rent kartesiskt tillägg till Informix, medan "
"Informix Geodetic är ett rent geografiskt tillägg."

#: ../../en/geography.rst:50
msgid "Similar to SQL Server, PostGIS uses two types, \"geometry\" and \"geography\"."
msgstr ""
"I likhet med SQL Server använder PostGIS två typer, \"geometry\" och "
"\"geography\"."

#: ../../en/geography.rst:52
msgid "Using the ``geography`` instead of ``geometry`` type, let's try again to measure the distance between Los Angeles and Paris."
msgstr ""
"Med hjälp av typen ``geografi`` istället för ``geometri``, låt oss försöka "
"igen att mäta avståndet mellan Los Angeles och Paris."

#: ../../en/geography.rst:65
msgid "A big number! All return values from ``geography`` calculations are in **meters**, so our answer is 9125km."
msgstr ""
"Ett stort tal! Alla returvärden från ``geografi``-beräkningar är i **meter**"
", så vårt svar är 9125km."

#: ../../en/geography.rst:67
msgid "Older versions of PostGIS supported very basic calculations over the sphere using the :command:`ST_Distance_Spheroid(point, point, measurement)` function. However, :command:`ST_Distance_Spheroid` is substantially limited. The function only works on points and provides no support for indexing across the poles or international dateline."
msgstr ""
"Äldre versioner av PostGIS stödde mycket grundläggande beräkningar över "
"sfären med hjälp av funktionen :command:`ST_Distance_Spheroid(point, point, "
"measurement)`. Men :command:`ST_Distance_Spheroid` är väsentligt begränsad. "
"Funktionen fungerar bara på punkter och ger inget stöd för indexering över "
"polerna eller den internationella datalinjen."

#: ../../en/geography.rst:69
msgid "The need to support non-point geometries becomes very clear when posing a question like \"How close will a flight from Los Angeles to Paris come to Iceland?\""
msgstr ""
"Behovet av att stödja icke-punktgeometrier blir mycket tydligt när man "
"ställer en fråga som \"Hur nära kommer ett flyg från Los Angeles till Paris "
"att komma Island?\""

#: ../../en/geography.rst:73
msgid "Working with geographic coordinates on a Cartesian plane (the purple line) yields a *very* wrong answer indeed! Using great circle routes (the red lines) gives the right answer. If we convert our LAX-CDG flight into a line string and calculate the distance to a point in Iceland using ``geography`` we'll get the right answer (recall) in meters."
msgstr ""
"Att arbeta med geografiska koordinater på ett kartesiskt plan (den lila "
"linjen) ger ett *mycket* felaktigt svar! Att använda storcirkelrutter (de "
"röda linjerna) ger rätt svar. Om vi konverterar vår flygning LAX-CDG till en "
"linjestring och beräknar avståndet till en punkt på Island med hjälp av "
"``geografi`` får vi rätt svar (recall) i meter."

#: ../../en/geography.rst:86
msgid "So the closest approach to Iceland (as measured from its international airport) on the LAX-CDG route is a relatively small 502km."
msgstr ""
"Så den närmaste inflygningen till Island (mätt från dess internationella "
"flygplats) på LAX-CDG-rutten är relativt små 502 km."

#: ../../en/geography.rst:88
msgid "The Cartesian approach to handling geographic coordinates breaks down entirely for features that cross the international dateline. The shortest great-circle route from Los Angeles to Tokyo crosses the Pacific Ocean. The shortest Cartesian route crosses the Atlantic and Indian Oceans."
msgstr ""
"Den kartesiska metoden för att hantera geografiska koordinater bryts ned "
"helt för objekt som korsar den internationella datalinjen. Den kortaste "
"storcirkelrutten från Los Angeles till Tokyo korsar Stilla havet. Den "
"kortaste kartesiska rutten korsar Atlanten och Indiska oceanen."

#: ../../en/geography.rst:111
msgid "Using Geography"
msgstr "Använda geografi"

#: ../../en/geography.rst:113
msgid "In order to load geometry data into a geography table, the geometry first needs to be projected into EPSG:4326 (longitude/latitude), then it needs to be changed into geography.  The :command:`ST_Transform(geometry,srid)` function converts coordinates to geographics and the :command:`Geography(geometry)` function or the ``::geography`` suffix \"casts\" to geography."
msgstr ""
"För att läsa in geometridata i en geograftabell måste geometrin först "
"projiceras till EPSG:4326 (longitud/latitud), sedan måste den ändras till "
"geografi.  Funktionen :command:`ST_Transform(geometry,srid)` konverterar "
"koordinater till geografi och funktionen :command:`Geography(geometry)` "
"eller suffixet ``::geography`` \"casts\" till geografi."

#: ../../en/geography.rst:124
msgid "Building a spatial index on a geography table is exactly the same as for geometry:"
msgstr ""
"Att bygga ett spatialt index på en geograftabell är exakt samma sak som för "
"geometri:"

#: ../../en/geography.rst:131
msgid "The difference is under the covers: the geography index will correctly handle queries that cover the poles or the international date-line, while the geometry one will not."
msgstr ""
"Skillnaden finns under täckmanteln: geografiindexet kommer att hantera "
"frågor som täcker polerna eller den internationella datumlinjen korrekt, "
"medan geometriindexet inte gör det."

#: ../../en/geography.rst:133
msgid "Here's a query to find all the subway stations within 500 meters of the Empire State Building."
msgstr ""
"Här är en fråga för att hitta alla tunnelbanestationer inom 500 meter från "
"Empire State Building."

#: ../../en/geography.rst:148
msgid "There are only a small number of native functions for the geography type:"
msgstr "Det finns bara ett litet antal inbyggda funktioner för geografin:"

#: ../../en/geography.rst:150
msgid ":command:`ST_AsText(geography)` returns ``text``"
msgstr ":command:`ST_AsText(geografi)` returnerar ``text``"

#: ../../en/geography.rst:151
msgid ":command:`ST_GeographyFromText(text)` returns ``geography``"
msgstr ":command:`ST_GeographyFromText(text)` returnerar ``geografi``"

#: ../../en/geography.rst:152
msgid ":command:`ST_AsBinary(geography)` returns ``bytea``"
msgstr ":command:`ST_AsBinary(geography)` returnerar ``bytea``"

#: ../../en/geography.rst:153
msgid ":command:`ST_GeogFromWKB(bytea)` returns ``geography``"
msgstr ":command:`ST_GeogFromWKB(bytea)` returnerar ``geografi``"

#: ../../en/geography.rst:154
msgid ":command:`ST_AsSVG(geography)` returns ``text``"
msgstr ":command:`ST_AsSVG(geografi)` returnerar ``text``"

#: ../../en/geography.rst:155
msgid ":command:`ST_AsGML(geography)` returns ``text``"
msgstr ":command:`ST_AsGML(geography)` returnerar ``text``"

#: ../../en/geography.rst:156
msgid ":command:`ST_AsKML(geography)` returns ``text``"
msgstr ":command:`ST_AsKML(geography)` returnerar ``text``"

#: ../../en/geography.rst:157
msgid ":command:`ST_AsGeoJson(geography)` returns ``text``"
msgstr ":command:`ST_AsGeoJson(geography)` returnerar ``text``"

#: ../../en/geography.rst:158
msgid ":command:`ST_Distance(geography, geography)` returns ``double``"
msgstr ":command:`ST_Distance(geography, geography)` returnerar ``double``"

#: ../../en/geography.rst:159
msgid ":command:`ST_DWithin(geography, geography, float8)` returns ``boolean``"
msgstr ""
":command:`ST_DWithin(geography, geography, float8)` returnerar ``boolean``"

#: ../../en/geography.rst:160
msgid ":command:`ST_Area(geography)` returns ``double``"
msgstr ":command:`ST_Area(geography)` returnerar ``double``"

#: ../../en/geography.rst:161
msgid ":command:`ST_Length(geography)` returns ``double``"
msgstr ":command:`ST_Length(geography)` returnerar ``double``"

#: ../../en/geography.rst:162
msgid ":command:`ST_Covers(geography, geography)` returns ``boolean``"
msgstr ":command:`ST_Covers(geography, geography)` returnerar ``boolean``"

#: ../../en/geography.rst:163
msgid ":command:`ST_CoveredBy(geography, geography)` returns ``boolean``"
msgstr ":command:`ST_CoveredBy(geography, geography)` returnerar ``boolean``"

#: ../../en/geography.rst:164
msgid ":command:`ST_Intersects(geography, geography)` returns ``boolean``"
msgstr ":command:`ST_Intersects(geography, geography)` returnerar ``boolean``"

#: ../../en/geography.rst:165
msgid ":command:`ST_Buffer(geography, float8)` returns ``geography`` [#Casting_note]_"
msgstr ""
":command:`ST_Buffer(geography, float8)` returnerar ``geography`` "
"[#Casting_note]_"

#: ../../en/geography.rst:166
msgid ":command:`ST_Intersection(geography, geography)` returns ``geography`` [#Casting_note]_"
msgstr ""
":command:`ST_Intersection(geography, geography)` returnerar ``geography`` "
"[#Casting_note]_"

#: ../../en/geography.rst:169
msgid "Creating a Geography Table"
msgstr "Skapa en geografitabell"

#: ../../en/geography.rst:171
msgid "The SQL for creating a new table with a geography column is much like that for creating a geometry table. However, geography includes the ability to specify the object type directly at the time of table creation. For example:"
msgstr ""
"SQL för att skapa en ny tabell med en geografikolumn är ungefär som för att "
"skapa en geometritabell. Geografi inkluderar dock möjligheten att ange "
"objekttypen direkt vid skapandet av tabellen. Till exempel"

#: ../../en/geography.rst:187
msgid "In the table definition, the ``GEOGRAPHY(Point)`` specifies our airport data type as points. The new geography fields don't get registered in the ``geometry_columns`` view. Instead, they are registered in a view called ``geography_columns``."
msgstr ""
"I tabelldefinitionen specificerar ``GEOGRAPHY(Point)`` vår flygplatsdatatyp "
"som punkter. De nya geografiska fälten registreras inte i vyn "
"``geometry_columns``. Istället registreras de i en vy som heter "
"``geography_columns``."

#: ../../en/geography.rst:200
msgid "Some columns were omitted from the above output."
msgstr "Vissa kolumner har utelämnats från ovanstående utdata."

#: ../../en/geography.rst:203
msgid "Casting to Geometry"
msgstr "Casting till geometri"

#: ../../en/geography.rst:205
msgid "While the basic functions for geography types can handle many use cases, there are times when you might need access to other functions only supported by the geometry type. Fortunately, you can convert objects back and forth from geography to geometry."
msgstr ""
"Även om de grundläggande funktionerna för geograftyper kan hantera många "
"användningsfall, finns det tillfällen då du kan behöva tillgång till andra "
"funktioner som endast stöds av geometritypen. Lyckligtvis kan du konvertera "
"objekt fram och tillbaka från geografi till geometri."

#: ../../en/geography.rst:207
msgid "The PostgreSQL syntax convention for casting is to append ``::typename`` to the end of the value you wish to cast. So, ``2::text`` will convert a numeric two to a text string '2'. And ``'POINT(0 0)'::geometry`` will convert the text representation of point into a geometry point."
msgstr ""
"PostgreSQL-syntaxkonventionen för casting är att lägga till ``::typename`` i "
"slutet av det värde du vill casta. Så, ``2::text`` kommer att konvertera en "
"numerisk två till en textsträng '2'. Och ``'POINT(0 0)'::geometry`` kommer "
"att konvertera textrepresentationen av point till en geometripunkt."

#: ../../en/geography.rst:209
msgid "The :command:`ST_X(point)` function only supports the geometry type. How can we read the X coordinate from our geographies?"
msgstr ""
"Funktionen :command:`ST_X(point)` stöder endast geometritypen. Hur kan vi "
"läsa X-koordinaten från våra geografier?"

#: ../../en/geography.rst:223
msgid "By appending ``::geometry`` to our geography value, we convert the object to a geometry with an SRID of 4326. From there we can use as many geometry functions as strike our fancy. But, remember -- now that our object is a geometry, the coordinates will be interpretted as Cartesian coordinates, not spherical ones."
msgstr ""
"Genom att lägga till ``::geometry`` till vårt geografivärde konverterar vi "
"objektet till en geometri med en SRID på 4326. Därifrån kan vi använda så "
"många geometrifunktioner som vi vill. Men kom ihåg - nu när vårt objekt är "
"en geometri kommer koordinaterna att tolkas som kartesiska koordinater, inte "
"sfäriska."

#: ../../en/geography.rst:227
msgid "Why (Not) Use Geography"
msgstr "Varför (inte) använda geografi"

#: ../../en/geography.rst:229
msgid "Geographics are universally accepted coordinates -- everyone understands what latitude/longitude mean, but very few people understand what UTM coordinates mean. Why not use geography all the time?"
msgstr ""
"Geografiska koordinater är allmänt accepterade koordinater - alla förstår "
"vad latitud/longitud betyder, men väldigt få förstår vad UTM-koordinater "
"betyder. Varför inte använda geografi hela tiden?"

#: ../../en/geography.rst:231
msgid "First, as noted earlier, there are far fewer functions available (right now) that directly support the geography type. You may spend a lot of time working around geography type limitations."
msgstr ""
"För det första finns det, som tidigare nämnts, mycket färre funktioner "
"tillgängliga (just nu) som direkt stöder geograftypen. Du kan få ägna mycket "
"tid åt att arbeta runt begränsningar för geograftyper."

#: ../../en/geography.rst:232
msgid "Second, the calculations on a sphere are computationally far more expensive than Cartesian calculations. For example, the Cartesian formula for distance (Pythagoras) involves one call to sqrt(). The spherical formula for distance (Haversine) involves two sqrt() calls, an arctan() call, four sin() calls and two cos() calls. Trigonometric functions are very costly, and spherical calculations involve a lot of them."
msgstr ""
"För det andra är beräkningarna på en sfär beräkningsmässigt mycket dyrare än "
"kartesiska beräkningar. Till exempel innebär den kartesiska formeln för "
"avstånd (Pythagoras) ett anrop till sqrt(). Den sfäriska formeln för avstånd "
"(Haversine) innebär två sqrt()-anrop, ett arctan()-anrop, fyra sin()-anrop "
"och två cos()-anrop. Trigonometriska funktioner är mycket kostsamma och "
"sfäriska beräkningar innehåller många sådana."

#: ../../en/geography.rst:234
msgid "The conclusion?"
msgstr "Slutsatsen?"

#: ../../en/geography.rst:236
msgid "**If your data is geographically compact** (contained within a state, county or city), **use the geometry type with a Cartesian projection** that makes sense with your data. See the http://epsg.io site and type in the name of your region for a selection of possible reference systems."
msgstr ""
"**Om dina data är geografiskt kompakta** (inom en stat, ett län eller en "
"stad), **använd geometritypen med en kartesisk projektion** som är logisk "
"för dina data. Se webbplatsen http://epsg.io och skriv in namnet på din "
"region för att få ett urval av möjliga referenssystem."

#: ../../en/geography.rst:238
msgid "**If you need to measure distance with a dataset that is geographically dispersed** (covering much of the world), **use the geography type.** The application complexity you save by working in ``geography`` will offset any performance issues. And casting to ``geometry`` can offset most functionality limitations."
msgstr ""
"**Om du behöver mäta avstånd med en dataset som är geografiskt spridd** ("
"täcker stora delar av världen), **använd typen geography.** Den "
"applikationskomplexitet du sparar genom att arbeta i ``geography`` kommer "
"att kompensera för eventuella prestandaproblem. Och casting till ``geometry``"
" kan kompensera för de flesta funktionsbegränsningar."

#: ../../en/geography.rst:241
msgid "Function List"
msgstr "Funktionslista"

#: ../../en/geography.rst:243
msgid "`ST_Distance(geometry, geometry) <http://postgis.net/docs/ST_Distance.html>`_: For geometry type Returns the 2-dimensional Cartesian minimum distance (based on spatial ref) between two geometries in projected units. For geography type defaults to return spheroidal minimum distance between two geographies in meters."
msgstr ""
"`ST_Distance(geometri, geometri) <http://postgis.net/docs/ST_Distance."
"html>`_: För geometrityp Returnerar det 2-dimensionella kartesiska "
"minimiavståndet (baserat på spatial ref) mellan två geometrier i projicerade "
"enheter. För geograftyp returneras som standard det sfäroida minsta "
"avståndet mellan två geografier i meter."

#: ../../en/geography.rst:245
msgid "`ST_GeographyFromText(text) <http://postgis.net/docs/ST_GeographyFromText.html>`_: Returns a specified geography value from Well-Known Text representation or extended (WKT)."
msgstr ""
"`ST_GeographyFromText(text) <http://postgis.net/docs/ST_GeographyFromText."
"html>`_: Returnerar ett specificerat geografivärde från Well-Known Text "
"representation eller utökad (WKT)."

#: ../../en/geography.rst:247
msgid "`ST_Transform(geometry, srid) <http://postgis.net/docs/ST_Transform.html>`_: Returns a new geometry with its coordinates transformed to the SRID referenced by the integer parameter."
msgstr ""
"`ST_Transform(geometry, srid) <http://postgis.net/docs/ST_Transform.html>`_: "
"Returnerar en ny geometri med dess koordinater transformerade till den SRID "
"som refereras till av heltalsparametern."

#: ../../en/geography.rst:249
msgid "`ST_X(point) <http://postgis.net/docs/ST_X.html>`_: Returns the X coordinate of the point, or NULL if not available. Input must be a point."
msgstr ""
"`ST_X(point) <http://postgis.net/docs/ST_X.html>`_: Returnerar punktens X-"
"koordinat, eller NULL om den inte är tillgänglig. Indata måste vara en punkt."

#: ../../en/geography.rst:251
msgid "`ST_Azimuth(geography_A, geography_B) <http://postgis.net/docs/ST_Azimuth.html>`_: Returns the direction from A to B in radians."
msgstr ""
"`ST_Azimuth(geografi_A, geografi_B) <http://postgis.net/docs/ST_Azimuth."
"html>`_: Returnerar riktningen från A till B i radianer."

#: ../../en/geography.rst:253
msgid "`ST_DWithin(geography_A, geography_B, R) <http://postgis.net/docs/ST_DWithin.html>`_: Returns true if A is within R meters of B."
msgstr ""
"`ST_DWithin(geografi_A, geografi_B, R) <http://postgis.net/docs/ST_DWithin."
"html>`_: Returnerar sant om A ligger inom R meter från B."

#: ../../en/geography.rst:257
msgid "Footnotes"
msgstr "Fotnoter"

#: ../../en/geography.rst:258
msgid "The buffer and intersection functions are actually wrappers on top of a cast to geometry, and are not carried out natively in spherical coordinates. As a result, they may fail to return correct results for objects with very large extents that cannot be cleanly converted to a planar representation."
msgstr ""
"Buffert- och intersektionsfunktionerna är faktiskt omslag ovanpå en "
"geometriomvandling och utförs inte naturligt i sfäriska koordinater. Därför "
"kan de misslyckas med att returnera korrekta resultat för objekt med mycket "
"stor utbredning som inte kan konverteras till en plan representation."

#: ../../en/geography.rst:260
msgid "For example, the :command:`ST_Buffer(geography,distance)` function transforms the geography object into a \"best\" projection, buffers it, and then transforms it back to geographics. If there is no \"best\" projection (the object is too large), the operation can fail or return a malformed buffer."
msgstr ""
"Funktionen :command:`ST_Buffer(geography,distance)` transformerar t.ex. "
"geografiobjektet till en \"bästa\" projektion, buffrar den och transformerar "
"sedan tillbaka den till geografin. Om det inte finns någon \"bästa\" "
"projektion (objektet är för stort) kan operationen misslyckas eller "
"returnera en felformad buffert."
