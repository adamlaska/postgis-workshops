# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Paul Ramsey | Mark Leslie
# This file is distributed under the same license as the Introduction to
# PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# Regina Obe <regina@arrival3d.com>, 2023.
# David Mateos <dmateos@users.noreply.weblate.osgeo.org>, 2024.
# Paulo Cesar <paulocoronado@gmail.com>, 2025.
# Paulo Cesar Coronado <paulocoronado@udistrital.edu.co>, 2025.
# Regina Obe <robe@postgis.net>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 21:46-0500\n"
"PO-Revision-Date: 2025-09-26 06:54+0000\n"
"Last-Translator: Regina Obe <robe@postgis.net>\n"
"Language-Team: Spanish <https://weblate.osgeo.org/projects/postgis-workshop/"
"validity/es/>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.4.3\n"
"Generated-By: Babel 2.9.1\n"

#: ../../en/validity.rst:4
msgid "Validity"
msgstr "Validez"

#: ../../en/validity.rst:6
msgid ""
"In 90% of the cases the answer to the question, \"why is my query giving me "
"a 'TopologyException' error\" is \"one or more of the inputs are invalid\".  "
"Which begs the question: what does it mean to be invalid, and why should we "
"care?"
msgstr ""
"En el 90% de los casos, la respuesta a la pregunta \"¿por qué mi consulta da "
"un error 'TopologyException'?\" es \"una o varias de las entradas no son "
"válidas\". Lo que nos lleva a preguntarnos: ¿qué significa que no sea válida "
"y por qué debería importarnos?"

#: ../../en/validity.rst:9
msgid "What is Validity"
msgstr "Qué es la Validez"

#: ../../en/validity.rst:11
msgid ""
"Validity is most important for polygons, which define bounded areas and "
"require a good deal of structure. Lines are very simple and cannot be "
"invalid, nor can points."
msgstr ""
"La validez es más importante para los polígonos, que definen áreas "
"delimitadas y requieren mucha estructura. Las líneas son muy sencillas y no "
"pueden ser inválidas, ni tampoco los puntos."

#: ../../en/validity.rst:13
msgid ""
"Some of the rules of polygon validity feel obvious, and others feel "
"arbitrary (and in fact, are arbitrary)."
msgstr ""
"Algunas de las reglas de validez de los polígonos parecen obvias y otras "
"arbitrarias (y, de hecho, lo son)."

#: ../../en/validity.rst:15
msgid "Polygon rings must close."
msgstr "Los anillos del polígono deben cerrarse."

#: ../../en/validity.rst:16
msgid ""
"Rings that define holes should be inside rings that define exterior "
"boundaries."
msgstr ""
"Los anillos que definen agujeros deben estar dentro de los anillos que "
"definen límites exteriores."

#: ../../en/validity.rst:17
msgid ""
"Rings may not self-intersect (they may neither touch nor cross themselves)."
msgstr ""
"Los anillos no pueden autointersectarse (no pueden tocarse ni cruzarse)."

#: ../../en/validity.rst:18
msgid "Rings may not touch other rings, except at a point."
msgstr "Los anillos no pueden tocar a otros anillos, excepto en un punto."

#: ../../en/validity.rst:19
msgid "Elements of multi-polygons may not touch each other."
msgstr "Los elementos de los multipolígonos no pueden tocarse entre sí."

#: ../../en/validity.rst:21
msgid ""
"The last three rules are in the arbitrary category. There are other ways to "
"define polygons that are equally self-consistent but the rules above are the "
"ones used by the :term:`OGC` :term:`SFSQL` standard that PostGIS conforms to."
msgstr ""
"Las tres últimas reglas podrían catalogarse como arbitrarias. Hay otras "
"formas de definir polígonos que son igualmente autoconsistentes, pero las "
"reglas anteriores son las utilizadas por el estándar :term:`OGC` "
":term:`SFSQL` que PostGIS cumple."

#: ../../en/validity.rst:23
msgid ""
"The reason the rules are important is because algorithms for geometry "
"calculations depend on consistent structure in the inputs. It is possible to "
"build algorithms that have no structural assumptions, but those routines "
"tend to be very slow, because the first step in any structure-free routine "
"is to *analyze the inputs and build structure into them*."
msgstr ""
"La razón por la que las reglas son importantes es porque los algoritmos para "
"cálculos geométricos dependen de una estructura consistente en las entradas. "
"Es posible construir algoritmos que no tengan suposiciones estructurales, "
"pero esas rutinas tienden a ser muy lentas, porque el primer paso en "
"cualquier rutina sin estructura es *analizar las entradas y construir "
"estructura en ellas*."

#: ../../en/validity.rst:25
msgid "Here's an example of why structure matters. This polygon is invalid:"
msgstr ""
"He aquí un ejemplo del por qué la estructura importa. Este polígono no es "
"válido:"

#: ../../en/validity.rst:31
msgid "You can see the invalidity a little more clearly in this diagram:"
msgstr "Puede ver la invalidez un poco más claramente en este diagrama:"

#: ../../en/validity.rst:35
msgid ""
"The outer ring is actually a figure-eight, with a self-intersection in the "
"middle. Note that the graphic routines successfully render the polygon fill, "
"so that visually it is appears to be an \"area\": two one-unit squares, so a "
"total area of two units of area."
msgstr ""
"El anillo exterior es en realidad una figura de ocho, con una auto-"
"intersección en el centro. Obsérvese que las rutinas gráficas representan "
"correctamente el relleno del polígono, de modo que visualmente parece un "
"\"área\": dos cuadrados de una unidad, es decir, un área total de dos "
"unidades de área."

#: ../../en/validity.rst:37
msgid "Let's see what the database thinks the area of our polygon is:"
msgstr "Veamos cuál cree la base de datos que es el área de nuestro polígono:"

#: ../../en/validity.rst:51
msgid ""
"What's going on here? The algorithm that calculates area assumes that rings "
"do not self-intersect. A well-behaved ring will always have the area that is "
"bounded (the interior) on one side of the bounding line (it doesn't matter "
"which side, just that it is on *one* side). However, in our (poorly behaved) "
"figure-eight, the bounded area is to the right of the line for one lobe and "
"to the left for the other. This causes the areas calculated for each lobe to "
"cancel out (one comes out as 1, the other as -1) hence the \"zero area\" "
"result."
msgstr ""
"¿Qué ocurre aquí? El algoritmo que calcula el área asume que los anillos no "
"se auto-intersecan. Un anillo que se comporte bien siempre tendrá el área "
"delimitada (el interior) a un lado de la línea de delimitación (no importa a "
"qué lado, sólo que sea a *un* lado). Sin embargo, en nuestro (mal "
"comportamiento) ocho, el área delimitada está a la derecha de la línea para "
"un lóbulo y a la izquierda para el otro. Esto hace que las áreas calculadas "
"para cada lóbulo se anulen (una sale como 1, la otra como -1), de ahí el "
"resultado de \"área cero\"."

#: ../../en/validity.rst:55
msgid "Detecting Validity"
msgstr "Detectando Validez"

#: ../../en/validity.rst:57
msgid ""
"In the previous example we had one polygon that we **knew** was invalid. How "
"do we detect invalidity in a table with millions of geometries? With the :"
"command:`ST_IsValid(geometry)` function. Used against our figure-eight, we "
"get a quick answer:"
msgstr ""
"En el ejemplo anterior teníamos un polígono que **sabíamos** era inválido. ¿"
"Cómo detectamos la invalidez en una tabla con millones de geometrías? Con la "
"función :command:`ST_IsValid(geometry)`. Usada contra nuestro \"ocho\", "
"obtenemos una respuesta rápida:"

#: ../../en/validity.rst:69
msgid ""
"Now we know that the feature is invalid, but we don't know why. We can use "
"the :command:`ST_IsValidReason(geometry)` function to find out the source of "
"the invalidity:"
msgstr ""
"Ahora sabemos que la entidad es inválida, pero no sabemos por qué. Podemos "
"usar la función :command:`ST_IsValidReason(geometry)` para encontrar la "
"causa de la invalidez:"

#: ../../en/validity.rst:81
msgid ""
"Note that in addition to the reason (self-intersection) the location of the "
"invalidity (coordinate (1 1)) is also returned."
msgstr ""
"Observa que además de la razón (autointersección) también se devuelve la "
"ubicación de la invalidez (coordenada (1 1))."

#: ../../en/validity.rst:83
msgid ""
"We can use the :command:`ST_IsValid(geometry)` function to test our tables "
"too:"
msgstr ""
"Podemos usar la función :command:`ST_IsValid(geometry)` para probar nuestras "
"tablas también:"

#: ../../en/validity.rst:104
msgid "Repairing Invalidity"
msgstr "Reparar la no validez"

#: ../../en/validity.rst:106
msgid ""
"Repairing invalidity involves stripping a polygon down to its simplest "
"structures (rings), ensuring the rings follow the rules of validity, then "
"building up new polygons that follow the rules of ring enclosure. Frequently "
"the results are intuitive, but in the case of extremely ill-behaved inputs, "
"the valid outputs may not conform to your intuition of how they should look. "
"Recent versions of PostGIS include different algorithms for geometry repair: "
"read the `manual page <http://postgis.net/docs/ST_MakeValid.html>`_ "
"carefully and choose the one you like best."
msgstr ""
"La reparación de invalidez implica reducir un polígono a sus estructuras más "
"simples (anillos), asegurando que los anillos sigan las reglas de validez, y "
"luego construir nuevos polígonos que sigan las reglas de encierro de "
"anillos. Frecuentemente los resultados son intuitivos, pero en el caso de "
"entradas extremadamente problemáticas, las salidas válidas pueden no "
"ajustarse a tu intuición de cómo deberían verse. Las versiones recientes de "
"PostGIS incluyen diferentes algoritmos para la reparación de geometrías: lee "
"con cuidado la `página del manual <http://postgis.net/docs/ST_MakeValid."
"html>`_ y elige el que más te guste."

#: ../../en/validity.rst:108
msgid ""
"For example, here's a classic invalidity -- the \"banana polygon\" -- a "
"single ring that encloses an area but bends around to touch itself, leaving "
"a \"hole\" which is not actually a hole."
msgstr ""
"Por ejemplo, aquí hay un caso clásico de invalidez -- el \"polígono banana\" "
"-- un único anillo que encierra un área pero se dobla para tocarse a sí "
"mismo, dejando un \"agujero\" que en realidad no es un agujero."

#: ../../en/validity.rst:117
msgid ""
"Running `ST_MakeValid <http://postgis.net/docs/ST_MakeValid.html>`_ on the "
"polygon returns a valid :term:`OGC` polygon, consisting of an outer and "
"inner ring that touch at one point."
msgstr ""
"Ejecutar `ST_MakeValid <http://postgis.net/docs/ST_MakeValid.html>`_ en el "
"polígono devuelve un polígono :term:`OGC` válido, consistente en un anillo "
"exterior e interior que se tocan en un punto."

#: ../../en/validity.rst:133
msgid ""
"The \"banana polygon\" (or \"inverted shell\") is a case where the :term:"
"`OGC` topology model for valid geometry and the model used internally by "
"ESRI differ. The ESRI model considers rings that touch to be invalid, and "
"prefers the banana form for this kind of shape. The OGC model is the "
"reverse. Neither is \"correct\", they are just different ways to model the "
"same situation."
msgstr ""
"El \"polígono banana\" (o \"concha invertida\") es un caso donde el modelo "
"topológico :term:`OGC` para geometrías válidas y el modelo usado "
"internamente por ESRI difieren. El modelo de ESRI considera inválidos los "
"anillos que se tocan, y prefiere la forma banana para este tipo de figura. "
"El modelo OGC es lo contrario. Ninguno es \"correcto\", son solo formas "
"diferentes de modelar la misma situación."

#: ../../en/validity.rst:137
msgid "Bulk Validity Repair"
msgstr "Reparación de invalidez en lote"

#: ../../en/validity.rst:139
msgid ""
"Here's an example of SQL to flag invalid geometries for review while adding "
"a repaired version to the table."
msgstr ""
"Aquí hay un ejemplo de SQL para marcar geometrías inválidas para revisión "
"mientras se agrega una versión reparada a la tabla."

#: ../../en/validity.rst:159
msgid ""
"A good tool for visually repairing invalid geometry is OpenJump (http://"
"openjump.org) which includes a validation routine under **Tools->QA-"
">Validate Selected Layers**."
msgstr ""
"Una buena herramienta para reparar visualmente geometrías inválidas es "
"OpenJump (http://openjump.org) que incluye una rutina de validación en "
"**Tools->QA->Validate Selected Layers**."

#: ../../en/validity.rst:163
msgid "Function List"
msgstr "Lista de funciones"

#: ../../en/validity.rst:165
msgid ""
"`ST_IsValid(geometry A) <http://postgis.net/docs/ST_IsValid.html>`_: Returns "
"a boolean indiciting whether the geometery is valid."
msgstr ""
"`ST_IsValid(geometry A) <http://postgis.net/docs/ST_IsValid.html>`_: "
"Devuelve un valor booleano que indica si la geometría es válida."

#: ../../en/validity.rst:167
msgid ""
"`ST_IsValidReason(geometry A) <http://postgis.net/docs/ST_IsValidReason."
"html>`_: Returns a text string with the reason for the invalidity and a "
"coordinate of invalidity."
msgstr ""
"`ST_IsValidReason(geometry A) <http://postgis.net/docs/ST_IsValidReason."
"html>`_: Devuelve una cadena de texto con la razón de la invalidez y una "
"coordenada de invalidez."

#: ../../en/validity.rst:169
msgid ""
"`ST_MakeValid(geometry A) <http://postgis.net/docs/ST_MakeValid.html>`_: "
"Returns a geometry re-constructed to obey the validity rules."
msgstr ""
"`ST_MakeValid(geometry A) <http://postgis.net/docs/ST_MakeValid.html>`_: "
"Devuelve una geometría reconstruida para cumplir con las reglas de validez."
