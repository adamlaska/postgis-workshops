# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2023, Paul Ramsey | Mark Leslie | PostGIS contributors
# This file is distributed under the same license as the Introduction to PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-09 10:51+0000\n"
"PO-Revision-Date: 2025-06-10 13:50+0000\n"
"Last-Translator: Teramoto Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese <https://weblate.osgeo.org/projects/postgis-workshop/"
"topology_topo_types/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4.3\n"

#: ../../en/topology_base_types.rst:4
msgid "Topology Basic Types"
msgstr "トポロジ基本タイプ"

#: ../../en/topology_base_types.rst:6
msgid "Before read this document, at least check one of this documents:"
msgstr ""

#: ../../en/topology_base_types.rst:8
msgid "`Introductory workshop: PostGIS Topology Workshop <https://postgis.net/workshops/en/postgis-intro/topology.html>`_."
msgstr ""

#: ../../en/topology_base_types.rst:10
msgid "`Manual: PostGIS Topology <https://postgis.net/docs/Topology.html>`_."
msgstr ""

#: ../../en/topology_base_types.rst:12
msgid "`ISO Topology: OGC-SFS Geometries <https://www.gaia-gis.it/fossil/libspatialite/wiki?name=topo-intro>`_."
msgstr ""

#: ../../en/topology_base_types.rst:14
msgid "In this workshop, we will check some fundamentals of topology, its basics and definitions. It is not intended to be a way to use them directly, is to understand it to then be able to use it easily."
msgstr ""

#: ../../en/topology_base_types.rst:18
msgid "Types"
msgstr ""

#: ../../en/topology_base_types.rst:23
msgid "The basic topology works on three basic types."
msgstr ""

#: ../../en/topology_base_types.rst:25
msgid "Node: 2D point, everything starts or ends here"
msgstr ""

#: ../../en/topology_base_types.rst:26
msgid "Edge: A linestring with direction that start and ends on a node"
msgstr ""

#: ../../en/topology_base_types.rst:27
msgid "Face: Closed set of linestrings, that conforms a polygon"
msgstr ""

#: ../../en/topology_base_types.rst:29
msgid "There are some rules for a set of nodes, edges and faces to be valid, check the ISO Topology document, has a very good summary of these conditions, a topology that follows all the rules, is a valid topology."
msgstr ""

#: ../../en/topology_base_types.rst:31
msgid "Is good to know, until now Postgis will save all this information internally, each type has its own unique ID, and with it we can edit and change them using the available functions, for example with ST_RemEdgeNewFace you can remove an edge and create a new face."
msgstr ""

#: ../../en/topology_base_types.rst:33
msgid "But there is still a missing piece, how do we say for example, a face has a specific attribute? Postgis implements several concepts to do this like Layers, TopoGeometry, TopoElement."
msgstr ""

#: ../../en/topology_base_types.rst:36
msgid "Universal Face"
msgstr ""

#: ../../en/topology_base_types.rst:38
msgid "It Might be intuitive to think that only the faces constructed by edges exist, there is one exception, all the white space out of all the faces is also a face!"
msgstr ""

#: ../../en/topology_base_types.rst:40
msgid "The empty space is called the Universal Face, when a Topology is empty, all the space is the Universal Face, when we add a linestring is an edge of this face, then when we make a polygon it is like make a hole in the face and stealing it to assign it to a face."
msgstr ""
"何もない空間はユニバーサルフェイスと呼ばれます。トポロジに何もないときは空間"
"の全てがユニバーサルフェイスです。ここでラインストリングを追加すると、このフ"
"ェイスのエッジで、このあと、ポリゴンを作る時には、フェイス内に穴を作り、それ"
"を奪ってフェイスに割り当てるようなかんじになります。"

#: ../../en/topology_base_types.rst:42
msgid "This face is infinite and does not have any boundary."
msgstr "このフェイスは無限大で境界を持ちません。"

#: ../../en/topology_base_types.rst:49
msgid "The Universal Face has the ID 0."
msgstr "ユニバーサルフェイスの ID は 0 です。"

#: ../../en/topology_base_types.rst:52
msgid "Edge interpretation"
msgstr "エッジの解釈"

#: ../../en/topology_base_types.rst:54
#, fuzzy
msgid "To correctly represent a topology and their forms, there are some definitions that are used to construct the tables that store everything, the edge is on the more complex ones."
msgstr ""
"トポロジとその形状を正しく表現するために、全てを保存するテーブルを構築するた"
"めに使われる定義が存在します。エッジは、より複雑なものの上にあります。"

#: ../../en/topology_base_types.rst:56
msgid "All the information about edges is stored on the edge_data table, in your custom topology schema, and which information do we need in the edges? basically its nodes and faces information, edge is the primitive who connects both."
msgstr ""
"エッジに関する情報はすべて、トポロジスキーマ内の edge_data "
"テーブルに保存されています。どの情報がエッジに必要でしょうか? "
"基本的にはノードとフェイスの情報で、エッジは両社を接続するプリミティブです。"

#: ../../en/topology_base_types.rst:58
msgid "These linestrings are called Edges because they are the edges of the faces."
msgstr "これらのラインストリングは、フェイスのエッジになるので、エッジと呼ばれます。"

#: ../../en/topology_base_types.rst:61
msgid "Edge direction, left and right"
msgstr "エッジ方向、左と右"

#: ../../en/topology_base_types.rst:63
msgid "Edges in topology has a right defined perspective and view, when we see them must be done in the next way:"
msgstr "トポロジのエッジには正しく定義された視点と視界とがあります。それらは次のよう"
"に見えます:"

#: ../../en/topology_base_types.rst:68
msgid "When we want to see from the edge perspective is always from the end node to the start edge, always looking the edge forward."
msgstr ""

#: ../../en/topology_base_types.rst:74
msgid "The edges have left and right properties, as we see they are defined using the edge perspective, see the linestring from the start node to the end node, there will always be a well defined left and right."
msgstr ""
"エッジは左属性と右属性を持ち、エッジの視線を使って定義します。すなわち、ライ"
"ンストリングの始点ノードから終点ノードを見ます。常に定義づけられた左と右があ"
"ります。"

#: ../../en/topology_base_types.rst:76
msgid "So see the edge forward and you always have a left and right side."
msgstr "エッジの前方向を見ることができ、左と右があることが分かります。"

#: ../../en/topology_base_types.rst:78
msgid "This helps to relate which faces are on each side of the edge:"
msgstr "次の図は、どのフェイスがエッジのどちらの側にあるかの関係を見る助けになります"
"。"

#: ../../en/topology_base_types.rst:83
msgid "Check the edges on the image, while almost all the edges go from down to up and left to right, there is an orange edge which has the opposite direction, so its sides left and right are swapped in reference to the others, but if you look the edge forward, the right and left are right."
msgstr ""
"画像のエッジを確認して、ほとんど全てのエッジが下から上に向かい、左から右に向"
"かっています。逆方向になるエッジもあります。オレンジ色のエッジです。逆方向の"
"エッジは、そうでないエッジとは右、左が入れ替わっています。ただ、エッジを順方"
"向に見ると右左が正しくなります。"

#: ../../en/topology_base_types.rst:85
msgid "Continue seeing the orange edge, while on its right has a polygon built by the edges, on the left is the Universal Face."
msgstr "オレンジ色のエッジをそのまま見てください。エッジの右側にそのエッジで作られた"
"ポリゴンがあり、左側にユニバーサルフェイスがあります。"

#: ../../en/topology_base_types.rst:87
msgid "When we want to analyze any edge, and we need to see it from the edge perspective, it is always looking the edge in forward, never in backward!"
msgstr ""
"あらゆるエッジを解析したい時には、エッジ視点の方向からエッジを見る必要があり"
"ます。常にエッジの前方を見るようにして、後方を見るようにはしてはいけません!"

#: ../../en/topology_base_types.rst:89
msgid "Which are all the next edges? Looking forward we go from start node to the end node, all the edges who start or end in the end node of the edge!"
msgstr ""

#: ../../en/topology_base_types.rst:92
msgid "Edge Data"
msgstr "エッジデータ"

#: ../../en/topology_base_types.rst:94
#, fuzzy
msgid "The edge_data table has information related to the edge, from what we know right now we can interpret the next columns:"
msgstr "edge_data テーブルには、エッジ関連の情報が入っています。今のところよく知って"
"いるものから次に示すカラムを解釈することができます:"

#: ../../en/topology_base_types.rst:96
msgid "edge_id: Unique ID for the edge"
msgstr "edge_id: エッジの一意の ID"

#: ../../en/topology_base_types.rst:97
msgid "start_node: ID for the node who is the same as the start point of the edge"
msgstr "start_node: エッジの始端と同じノードの ID"

#: ../../en/topology_base_types.rst:98
msgid "end_node: ID for the node who is the same as the end point of the edge"
msgstr "end_node: エッジの終端ポイントと同じノードの ID"

#: ../../en/topology_base_types.rst:99
msgid "left_face: ID of the face on the left of the edge"
msgstr "left_face: エッジの左側のフェイスの ID"

#: ../../en/topology_base_types.rst:100
msgid "right_face: ID of the face on the right of the edge"
msgstr "right_face: エッジの右側のフェイスの ID"

#: ../../en/topology_base_types.rst:101
msgid "geom: Geometry of the edge"
msgstr "geom: エッジのジオメトリ"

#: ../../en/topology_base_types.rst:104
msgid "Abs Next Edge & Next Edge"
msgstr "Abs Next Edge と Next Edge"

#: ../../en/topology_base_types.rst:106
msgid "The table edge_data has the columns abs_next_left_edge and abs_next_right_edge, at this moment it gets a little tricky how to interpret it."
msgstr ""
"edge_data テーブルには abs_next_left_edge と abs_next_right_edge "
"というカラムがあります。この場では、少しトリッキーに解釈します。"

#: ../../en/topology_base_types.rst:108
msgid "Until now we mainly see properties of the edge itself and what has on the sides, the next edge properties are different, do not ask only about the edge itself, it is about which is the next edge who builds the face on the right or left."
msgstr ""
"今まで主にエッジ自体のプロパティと、左側や右側にあるものを見ていましたが、"
"next edge (次のエッジ) プロパティは違います。エッジ自体の情報ではなく、左側化"
"右側のフェイスを構築する、次のエッジに関する情報が入ります。"

#: ../../en/topology_base_types.rst:110
msgid "The logic of the right_edge and the left_edge are very similar, so we will look first on the left one deeper and then show the right one."
msgstr "right_edge と left_edge のロジックはよく似ているので、先に左側を掘り下げて見"
"て、そのあとで右側を見ます。"

#: ../../en/topology_base_types.rst:112
msgid "We will be using the next topology as example:"
msgstr "例として次のトポロジを使います:"

#: ../../en/topology_base_types.rst:119
msgid "Left"
msgstr "左側"

#: ../../en/topology_base_types.rst:121
msgid "Let's pick as an example the Edge 5, this one has on the Left the Face 2, looking forward which is the next edge who builds the Face 2?"
msgstr ""
"例として 5番エッジ を取り上げてみましょう。これには、左側に 2番フェイス "
"があります。順方向に見て、このフェイスを構築する次のエッジはどこでしょう?"

#: ../../en/topology_base_types.rst:123
msgid "This is the Edge 6."
msgstr "6番エッジ です。"

#: ../../en/topology_base_types.rst:129
#, fuzzy
msgid "Something very important here is the perspective we follow the lines, depending on the Edge direction, is like see the Face clockwise or anticlockwise."
msgstr "ここでラインを追いかける、エッジの方向に依存する視点が、フェイスが時計回りか"
"反時計回りかを見るようなもので、非常に重要です。"

#: ../../en/topology_base_types.rst:131
msgid "With this information we have abs_next_left_edge which will be 6."
msgstr ""

#: ../../en/topology_base_types.rst:133
msgid "The next_left_edge is almost the same as abs_next_left_edge, except it can be negative which depends on the perspective we see the edge."
msgstr ""

#: ../../en/topology_base_types.rst:135
msgid "If we follow the Edge perspective we will have two directions, the direction of the next edge, and the direction of the perspective on the next edge."
msgstr ""

#: ../../en/topology_base_types.rst:137
msgid "We will use the next sign in each case:"
msgstr ""

#: ../../en/topology_base_types.rst:139
msgid "Perspective direction and Next edge direction are opposed: \"-\""
msgstr ""

#: ../../en/topology_base_types.rst:140
msgid "Perspective direction and Next edge direction are the same: None, keep the value positive"
msgstr ""

#: ../../en/topology_base_types.rst:142
msgid "How the Perspective and Edge 6 have the same direction, next_left_edge will be 6."
msgstr ""

#: ../../en/topology_base_types.rst:144
msgid "abs_next_left_edge: 6"
msgstr ""

#: ../../en/topology_base_types.rst:145
msgid "next_left_edge: 6"
msgstr ""

#: ../../en/topology_base_types.rst:148
msgid "Right"
msgstr ""

#: ../../en/topology_base_types.rst:150
msgid "The only difference between Left and Right analysis is the perspective, while in Left we use forward, in Right we will see backwards. Be careful, even if we look backwards the definition of Left Face and Right Face are still the same, looking forward! Only changes the perspective to follow."
msgstr ""

#: ../../en/topology_base_types.rst:152
msgid "The Edge 5 has the Face 0 on its Right, the Universal Face, looking Edge 5 backwards the next edge who builds Face 0 is the Edge 4."
msgstr ""

#: ../../en/topology_base_types.rst:158
msgid "Following the perspective of Edge 5 on Edge 4 we can see it goes up, while the Edge 4 goes down, the Perspective direction and the Edge 4 direction are opposed."
msgstr ""

#: ../../en/topology_base_types.rst:160
msgid "abs_next_right_edge: 4"
msgstr ""

#: ../../en/topology_base_types.rst:161
msgid "nexr_right_edge: -4 (Perspective direction and Edge 4 direction are opposed)"
msgstr ""

#: ../../en/topology_base_types.rst:164
msgid "Isolated Edge Case"
msgstr ""

#: ../../en/topology_base_types.rst:166
msgid "There is a case that may be confusing, all the rules above follow in the same way but it is good to take a look."
msgstr ""

#: ../../en/topology_base_types.rst:172
msgid "When we have an Edge that has no connections to other Edges, the first thing we can appreciate is that the Face of the Left is the same as the Right, in this case Face 0, the Universal Face."
msgstr ""

#: ../../en/topology_base_types.rst:174
msgid "If we follow the past logic, on the Left is the Face 0, which is the next edge who builds Face 0? Actually there is an Edge, and is itself, and it also has a perspective as before:"
msgstr ""

#: ../../en/topology_base_types.rst:180
msgid "If we check the perspective direction we ends looking the same edge but in opposite direction, this means the Edge 1 and its Next Edge (Edge 1) has opposed directions."
msgstr ""

#: ../../en/topology_base_types.rst:182
#: ../../en/topology_base_types.rst:194
msgid "edge_id: 1"
msgstr ""

#: ../../en/topology_base_types.rst:183
msgid "abs_next_left_edge: 1"
msgstr ""

#: ../../en/topology_base_types.rst:184
msgid "next_left_edge: -1 (This will always be negative while we see forward a isolated edge)"
msgstr ""

#: ../../en/topology_base_types.rst:186
msgid "For the Next Right Edge is the same, the Next Edge will be it self, the only what it changes is the perspective:"
msgstr ""

#: ../../en/topology_base_types.rst:192
msgid "When we look backwards any isolated edge, the perspective will always have the same direction as the Edge so:"
msgstr ""

#: ../../en/topology_base_types.rst:195
msgid "abs_next_right_edge: 1"
msgstr ""

#: ../../en/topology_base_types.rst:196
msgid "next_right_edge: -1 (This will always be positive while we see backwar a isolated edge)"
msgstr ""

#: ../../en/topology_base_types.rst:199
msgid "Full columns of edge_data"
msgstr ""

#: ../../en/topology_base_types.rst:201
msgid "We already checked all the columns of the edge_data table:"
msgstr ""

#: ../../en/topology_base_types.rst:203
msgid "edge_id: Unique ID for the edge."
msgstr ""

#: ../../en/topology_base_types.rst:204
msgid "start_node: ID for the node which is the same as the start point of the edge."
msgstr ""

#: ../../en/topology_base_types.rst:205
msgid "end_node: ID for the node which is the same as the end point of the edge."
msgstr ""

#: ../../en/topology_base_types.rst:206
msgid "left_face: ID of the face on the left of the edge."
msgstr ""

#: ../../en/topology_base_types.rst:207
msgid "abs_next_left_edge: Next edge who builds the face on the left."
msgstr ""

#: ../../en/topology_base_types.rst:208
msgid "next_left_edge: abs_next_left_edge and negative sign if the right face is on the right of the next left edge."
msgstr ""

#: ../../en/topology_base_types.rst:209
msgid "right_face: ID of the face on the right of the edge."
msgstr ""

#: ../../en/topology_base_types.rst:210
msgid "abs_next_right_edge: Next edge who builds the face on the right."
msgstr ""

#: ../../en/topology_base_types.rst:211
msgid "next_right_edge: abs_next_right_edge and negative sign if the left face is on the right of the next right edge."
msgstr ""

#: ../../en/topology_base_types.rst:212
msgid "geom: Geometry of the edge."
msgstr ""
